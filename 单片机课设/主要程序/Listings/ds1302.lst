C51 COMPILER V9.54   DS1302                                                                01/13/2020 15:12:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: D:\keil_v5\C51\BIN\C51.EXE ds1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ds
                    -1302.lst) TABS(2) OBJECT(.\Objects\ds1302.obj)

line level    source

   1          #include "ds1302.h"
   2          #include "config.h"
   3          
   4          sbit RST_1302=P1^5;
   5          sbit SCK_1302=P1^7;
   6          sbit IO_1302=P1^6;
   7                              //  秒    分    时    日    月    周    年
   8          uchar code ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};//写的地址，读的话每个加1
   9          uchar TIME[7] = {0x02, 0x01, 0x17, 0x09, 0x12, 0x01, 0x19};//初始化时的默认时间
  10                        //  秒    分    时    日    月    周    年
  11          
  12          void Ds1302Write(uchar addr, uchar dat)
  13          {
  14   1        uchar n;
  15   1        RST_1302 = 0;
  16   1        _nop_();
  17   1      
  18   1        SCK_1302 = 0;//先将SCLK置低电平。
  19   1        _nop_();
  20   1        RST_1302 = 1; //然后将RST(CE)置高电平。
  21   1        _nop_();
  22   1      
  23   1        for (n=0; n<8; n++)//开始传送八位地址命令
  24   1        {
  25   2          IO_1302 = addr & 0x01;//数据从低位开始传送
  26   2          addr >>= 1;
  27   2          SCK_1302 = 1;//数据在上升沿时，DS1302读取数据
  28   2          _nop_();
  29   2          SCK_1302 = 0;
  30   2          _nop_();
  31   2        }
  32   1        for (n=0; n<8; n++)//写入8位数据
  33   1        {
  34   2          IO_1302 = dat & 0x01;
  35   2          dat >>= 1;
  36   2          SCK_1302 = 1;//数据在上升沿时，DS1302读取数据
  37   2          _nop_();
  38   2          SCK_1302 = 0;
  39   2          _nop_();  
  40   2        } 
  41   1           
  42   1        RST_1302 = 0;//传送数据结束
  43   1        _nop_();
  44   1      }
  45          
  46          uchar Ds1302Read(uchar addr)
  47          {
  48   1        uchar n,dat,dat1;
  49   1        RST_1302 = 0;
  50   1        _nop_();
  51   1      
  52   1        SCK_1302 = 0;//先将SCLK置低电平。
  53   1        _nop_();
  54   1        RST_1302 = 1;//然后将RST(CE)置高电平。
C51 COMPILER V9.54   DS1302                                                                01/13/2020 15:12:59 PAGE 2   

  55   1        _nop_();
  56   1      
  57   1        for(n=0; n<8; n++)//开始传送八位地址命令
  58   1        {
  59   2          IO_1302 = addr & 0x01;//数据从低位开始传送
  60   2          addr >>= 1;
  61   2          SCK_1302 = 1;//数据在上升沿时，DS1302读取数据
  62   2          _nop_();
  63   2          SCK_1302 = 0;//DS1302下降沿时，放置数据
  64   2          _nop_();
  65   2        }
  66   1        _nop_();
  67   1        for(n=0; n<8; n++)//读取8位数据
  68   1        {
  69   2          dat1 = IO_1302;//从最低位开始接收
  70   2          dat = (dat>>1) | (dat1<<7);
  71   2          SCK_1302 = 1;
  72   2          _nop_();
  73   2          SCK_1302 = 0;//DS1302下降沿时，放置数据
  74   2          _nop_();
  75   2        }
  76   1      
  77   1        RST_1302 = 0;//有bug的话删这里
  78   1        _nop_();  //以下为DS1302复位的稳定时间,必须的。
  79   1        SCK_1302 = 1;
  80   1        _nop_();
  81   1        IO_1302 = 0;
  82   1        _nop_();
  83   1        IO_1302 = 1;
  84   1        _nop_();
  85   1        return dat; 
  86   1      }
  87          
  88          //void Ds1302Init()//有电池备用电源，不需要
  89          //{
  90          //  uchar n;
  91          //  Ds1302Write(0x8E,0X00);    //禁止写保护，就是关闭写保护功能
  92          //  for (n=0; n<7; n++)//写入7个字节的时钟信号：分秒时日月周年
  93          //  {
  94          //    Ds1302Write(ADDR[n],TIME[n]); 
  95          //  }
  96          //  Ds1302Write(0x8E,0x80);    //打开写保护功能
  97          //}
  98          
  99          void Ds1302ReadTime()
 100          {
 101   1        uchar n;
 102   1        for (n=0; n<7; n++)//读取7个字节的时钟信号：分秒时日月周年
 103   1        {
 104   2          TIME[n] = Ds1302Read(ADDR[n]+1);
 105   2        }
 106   1      }
 107          
 108          
 109          
 110          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    150    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.54   DS1302                                                                01/13/2020 15:12:59 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
