C51 COMPILER V9.54   DS18B20                                                               01/13/2020 15:12:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\ds18b20.obj
COMPILER INVOKED BY: D:\keil_v5\C51\BIN\C51.EXE ds18b20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\d
                    -s18b20.lst) TABS(2) OBJECT(.\Objects\ds18b20.obj)

line level    source

   1          #include "ds18b20.h"
   2          #include "config.h"
   3          sbit DQ=P1^4;
   4          uchar Ds18b20Init()
   5          {
   6   1        uchar i;
   7   1        DQ = 0;      //将总线拉低480us~960us
   8   1        i = 70; 
   9   1        while(i--);//延时642us
  10   1        DQ = 1;     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  11   1        i = 0;
  12   1        while(DQ) //等待DS18B20拉低总线
  13   1        {
  14   2          sleep(1);
  15   2          i++;
  16   2          if(i>5)//等待>5MS
  17   2          {
  18   3            return 0;//初始化失败
  19   3          }
  20   2        
  21   2        }
  22   1        return 1;//初始化成功
  23   1      }
  24          
  25          void Ds18b20WriteByte(uchar dat)
  26          {
  27   1        uint i, j;
  28   1      
  29   1        for(j=0; j<8; j++)
  30   1        {
  31   2          DQ = 0;         //每写入一位数据之前先把总线拉低1us
  32   2          i++;
  33   2          DQ = dat & 0x01;  //然后写入一个数据，从最低位开始
  34   2          i=6;
  35   2          while(i--); //延时68us，持续时间最少60us
  36   2          DQ = 1; //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  37   2          dat >>= 1;
  38   2        }
  39   1      }
  40          
  41          uchar Ds18b20ReadByte()
  42          {
  43   1        uchar byte, bi;
  44   1        uint i, j;  
  45   1        for(j=8; j>0; j--)
  46   1        {
  47   2          DQ = 0;//先将总线拉低1us
  48   2          i++;
  49   2          DQ = 1;//然后释放总线
  50   2          i++;
  51   2          i++;//延时6us等待数据稳定
  52   2          bi = DQ;   //读取数据，从最低位开始读取
  53   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  54   2          byte = (byte >> 1) | (bi << 7);             
C51 COMPILER V9.54   DS18B20                                                               01/13/2020 15:12:59 PAGE 2   

  55   2          i = 4;    //读取完之后等待48us再接着读取下一个数
  56   2          while(i--);
  57   2        }       
  58   1        return byte;
  59   1      }
  60          
  61          void  Ds18b20ChangTemp()
  62          {
  63   1        Ds18b20Init();
  64   1        sleep(1);
  65   1        Ds18b20WriteByte(0xcc);   //跳过ROM操作命令    
  66   1        Ds18b20WriteByte(0x44);     //温度转换命令
  67   1        //Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
  68   1         
  69   1      }
  70          
  71          void  Ds18b20ReadTempCom()
  72          { 
  73   1      
  74   1        Ds18b20Init();
  75   1        sleep(1);
  76   1        Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
  77   1        Ds18b20WriteByte(0xbe);  //发送读取温度命令
  78   1      }
  79          
  80          int Ds18b20ReadTemp()
  81          {
  82   1        int temp = 0;
  83   1        uchar tmh, tml;
  84   1        Ds18b20ChangTemp();       //先写入转换命令
  85   1        Ds18b20ReadTempCom();     //然后等待转换完后发送读取温度命令
  86   1        tml = Ds18b20ReadByte();    //读取温度值共16位，先读低字节
  87   1        tmh = Ds18b20ReadByte();    //再读高字节
  88   1        temp = tmh;
  89   1        temp <<= 8;
  90   1        temp |= tml;
  91   1        return temp;
  92   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
